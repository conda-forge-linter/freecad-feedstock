diff --git a/src/Mod/Part/App/PropertyTopoShape.cpp b/src/Mod/Part/App/PropertyTopoShape.cpp
index d590a8553d..b632411a8a 100644
--- a/src/Mod/Part/App/PropertyTopoShape.cpp
+++ b/src/Mod/Part/App/PropertyTopoShape.cpp
@@ -1,5 +1,5 @@
 /***************************************************************************
- *   Copyright (c) Jürgen Riegel          (juergen.riegel@web.de) 2002     *
+ *   Copyright (c) 2002 Jürgen Riegel <juergen.riegel@web.de>              *
  *                                                                         *
  *   This file is part of the FreeCAD CAx development system.              *
  *                                                                         *
@@ -42,12 +42,13 @@
 # include <Standard_Version.hxx>
 # include <gp_GTrsf.hxx>
 # include <gp_Trsf.hxx>
-#endif
 
 #if OCC_VERSION_HEX >= 0x060800
-#include <OSD_OpenFile.hxx>
+# include <OSD_OpenFile.hxx>
 #endif
 
+#endif // _PreComp_
+
 #include <Base/Console.h>
 #include <Base/Writer.h>
 #include <Base/Reader.h>
@@ -71,7 +72,7 @@
 
 using namespace Part;
 
-TYPESYSTEM_SOURCE(Part::PropertyPartShape , App::PropertyComplexGeoData);
+TYPESYSTEM_SOURCE(Part::PropertyPartShape , App::PropertyComplexGeoData)
 
 PropertyPartShape::PropertyPartShape()
 {
@@ -95,7 +96,7 @@ void PropertyPartShape::setValue(const TopoDS_Shape& sh)
     hasSetValue();
 }
 
-const TopoDS_Shape& PropertyPartShape::getValue(void)const 
+const TopoDS_Shape& PropertyPartShape::getValue(void)const
 {
     return _Shape.getShape();
 }
@@ -185,7 +186,7 @@ PyObject *PropertyPartShape::getPyObject(void)
         }
     }
 
-    if (prop) prop->setConst();
+    prop->setConst();
     return prop;
 }
 
@@ -245,12 +246,12 @@ void PropertyPartShape::Save (Base::Writer &writer) const
     if(!writer.isForceXML()) {
         //See SaveDocFile(), RestoreDocFile()
         if (writer.getMode("BinaryBrep")) {
-            writer.Stream() << writer.ind() << "<Part file=\"" 
+            writer.Stream() << writer.ind() << "<Part file=\""
                             << writer.addFile("PartShape.bin", this)
                             << "\"/>" << std::endl;
         }
         else {
-            writer.Stream() << writer.ind() << "<Part file=\"" 
+            writer.Stream() << writer.ind() << "<Part file=\""
                             << writer.addFile("PartShape.brp", this)
                             << "\"/>" << std::endl;
         }
@@ -278,25 +279,25 @@ static void BRepTools_Write(const TopoDS_Shape& Sh, Standard_OStream& S) {
   SS.Write(S);
   SS.Write(Sh,S);
 }
-static Standard_Boolean  BRepTools_Write(const TopoDS_Shape& Sh, 
-                                   const Standard_CString File)
+
+static Standard_Boolean  BRepTools_Write(const TopoDS_Shape& Sh, const Standard_CString File)
 {
-  ofstream os;
+  std::ofstream os;
 #if OCC_VERSION_HEX >= 0x060800
-  OSD_OpenStream(os, File, ios::out);
+  OSD_OpenStream(os, File, std::ios::out);
 #else
-  os.open(File, ios::out);
+  os.open(File, std::ios::out);
 #endif
   if (!os.rdbuf()->is_open()) return Standard_False;
 
   Standard_Boolean isGood = (os.good() && !os.eof());
   if(!isGood)
     return isGood;
-  
+
   BRepTools_ShapeSet SS(Standard_False);
   // SS.SetProgress(PR);
   SS.Add(Sh);
-  
+
   os << "DBRep_DrawableShape\n";  // for easy Draw read
   SS.Write(os);
   isGood = os.good();
@@ -341,7 +342,7 @@ void PropertyPartShape::SaveDocFile (Base::Writer &writer) const
                 App::PropertyContainer* father = this->getContainer();
                 if (father && father->isDerivedFrom(App::DocumentObject::getClassTypeId())) {
                     App::DocumentObject* obj = static_cast<App::DocumentObject*>(father);
-                    Base::Console().Error("Shape of '%s' cannot be written to BRep file '%s'\n", 
+                    Base::Console().Error("Shape of '%s' cannot be written to BRep file '%s'\n",
                         obj->Label.getValue(),fi.filePath().c_str());
                 }
                 else {
@@ -355,7 +356,7 @@ void PropertyPartShape::SaveDocFile (Base::Writer &writer) const
 
             Base::ifstream file(fi, std::ios::in | std::ios::binary);
             if (file) {
-                //unsigned long ulSize = 0; 
+                //unsigned long ulSize = 0;
                 std::streambuf* buf = file.rdbuf();
                 //if (buf) {
                 //    unsigned long ulCurr;
@@ -399,7 +400,7 @@ void PropertyPartShape::RestoreDocFile(Base::Reader &reader)
 
             // read in the ASCII file and write back to the file stream
             Base::ofstream file(fi, std::ios::out | std::ios::binary);
-            unsigned long ulSize = 0; 
+            unsigned long ulSize = 0;
             if (reader) {
                 std::streambuf* buf = file.rdbuf();
                 reader >> buf;
@@ -420,7 +421,7 @@ void PropertyPartShape::RestoreDocFile(Base::Reader &reader)
                     App::PropertyContainer* father = this->getContainer();
                     if (father && father->isDerivedFrom(App::DocumentObject::getClassTypeId())) {
                         App::DocumentObject* obj = static_cast<App::DocumentObject*>(father);
-                        Base::Console().Error("BRep file '%s' with shape of '%s' seems to be empty\n", 
+                        Base::Console().Error("BRep file '%s' with shape of '%s' seems to be empty\n",
                             fi.filePath().c_str(),obj->Label.getValue());
                     }
                     else {
@@ -444,7 +445,7 @@ void PropertyPartShape::RestoreDocFile(Base::Reader &reader)
 
 // -------------------------------------------------------------------------
 
-TYPESYSTEM_SOURCE(Part::PropertyShapeHistory , App::PropertyLists);
+TYPESYSTEM_SOURCE(Part::PropertyShapeHistory , App::PropertyLists)
 
 PropertyShapeHistory::PropertyShapeHistory()
 {
@@ -510,7 +511,7 @@ void PropertyShapeHistory::Paste(const Property &from)
 
 // -------------------------------------------------------------------------
 
-TYPESYSTEM_SOURCE(Part::PropertyFilletEdges , App::PropertyLists);
+TYPESYSTEM_SOURCE(Part::PropertyFilletEdges , App::PropertyLists)
 
 PropertyFilletEdges::PropertyFilletEdges()
 {
